
// ===========================
// RESET PASSWORD COMPONENT - USING THEME SYSTEM
// ===========================

// Import theme system
@import '../../../shared/styles/index';

.reset-password-container {
  min-height: 100vh;
  @include flex-center;
  @include component-base;
  background-color: var(--theme-bg-primary);
  padding: 1.5rem;
  font-family: $font-family-base;

  // Responsive design
  @include respond-to('mobile') {
    padding: 1rem;
  }
}

.reset-password-card {
  width: 100%;
  max-width: 400px;
  padding: 3rem 2.5rem;
  background-color: var(--theme-bg-primary);
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1), 0 8px 25px rgba(235, 115, 122, 0.1);
    border: none;


  @include respond-to('mobile') {
    padding: 2rem 1.5rem;
    max-width: 350px;
  }
}

.reset-password-header {
  text-align: center;
  margin-bottom: 2rem;

  .reset-password-title {
    color: var(--theme-text-primary);
    font-size: $font-size-xl;
    font-weight: $font-weight-bold;
    margin: 0;
    line-height: $line-height-base;
  }
}

.reset-password-form {
  .form-group {
    @include theme-form-group;
    margin-bottom: 15px;
    .form-input {
      @include theme-input;
      height: $form-input-height;
      font-size: $font-size-base;

      &.error {
        @include theme-input('error');
      }

      &:focus {
        transform: translateY(-1px);
      }
    }
  }

  .error-message {
    @include status-badge('error', 'small');
    margin-top: 0.5rem;
    padding: 0.5rem 0.75rem;
    border-radius: $border-radius;
    // background-color: var(--theme-error-bg);
    color: var(--theme-error);
    border: 1px solid var(--theme-error-border);
    font-size: $font-size-sm;
    font-weight: $font-weight-normal;
    text-transform: none;
    letter-spacing: normal;
  }

  .btn-submit {
    @include theme-button('primary', 'large');
    width: 100%;
    margin-top: 1rem;
    height: $button-height-lg;
    font-size: $font-size-base;
    font-weight: $font-weight-medium;

    &:not(:disabled):hover {
      transform: translateY(-2px);
      box-shadow: var(--theme-shadow-lg);
    }

    &:not(:disabled):active {
      transform: translateY(0);
    }

    &.disabled {
      @include theme-button('secondary', 'large');
      opacity: var(--theme-disabled-opacity);
      cursor: not-allowed;
            background-color: var(--theme-text-disabled)!important;


      &:hover {
        transform: none;
        box-shadow: none;
      }
    }
  }
}

// Enhanced animations
.reset-password-card {
  animation: fadeInUp 0.6s ease-out;
}

.error-message {
  animation: shake 0.5s ease-in-out;
}

// Animation keyframes
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  75% { transform: translateX(5px); }
}

// Focus management for accessibility
.reset-password-form {
  .form-input:focus {
    @include focus-outline;
  }

  .btn-submit:focus {
    @include focus-outline;
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  .reset-password-card {
    border: 2px solid var(--theme-border-color);
  }

  .form-input {
    border-width: 2px;
  }

  .btn-submit {
    border: 2px solid var(--theme-accent-primary);
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .reset-password-card {
    animation: none;
  }

  .error-message {
    animation: none;
  }

  .btn-submit {
    transition: none;

    &:hover {
      transform: none;
    }
  }
}



  .invalid-feedback {
    color: #dc3545;
    font-size: 12px;
    display: block;
  }
  .password-requirements {
    padding: map-get($spacers, 2);
    background: rgba($Secound_Color_Red, 0.05);
    border-radius: $border-radius;
    border-left: 3px solid $Secound_Color_Red;
    background-color: rgb(191, 190, 190);
    margin-top: 0px;

    margin-bottom: 10px;
    small {
      color: $Text_Color;
      font-size: 12px;
      display: flex;
      align-items: center;
      gap: map-get($spacers, 1);

      i {
        color: $Secound_Color_Red;
      }
    }
  }
